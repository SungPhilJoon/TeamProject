//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/KyungSeo/InputActions/TestPlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @TestPlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @TestPlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""TestPlayerActions"",
    ""maps"": [
        {
            ""name"": ""PlayerSword"",
            ""id"": ""b23b545c-7b8e-476c-9eb4-f688355a1362"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5a308b85-15f2-4dcd-9afa-22066187b36b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""e0a0858f-8d03-4436-b37d-8635ecba7439"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""da3bc9be-fb1d-4bac-bc80-148a78c2a17b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill1"",
                    ""type"": ""Button"",
                    ""id"": ""22302b6e-437a-4869-b619-0ec08752f48a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill2"",
                    ""type"": ""Button"",
                    ""id"": ""05f60481-156a-462c-b3f7-0ed3ac4d56f4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""7e71b4d3-634f-437b-9ed7-a408cc6b405b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapToBow"",
                    ""type"": ""Button"",
                    ""id"": ""91486e51-6f1b-4608-9c6f-7bfe2bc8f66e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapToDefault"",
                    ""type"": ""Button"",
                    ""id"": ""dd7d61b7-e710-4a92-aed2-0c0be1f865cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Settings"",
                    ""type"": ""Button"",
                    ""id"": ""7797d05a-2540-43c0-b86c-5eb21eb3a6bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""87d0c206-2eb8-4d2f-9592-cf29779a76ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Equipment"",
                    ""type"": ""Button"",
                    ""id"": ""1ee01792-3d35-455a-ac4e-f67a4be6a7f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8180e8bd-4097-4f4e-ab88-4523101a6ce9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c5327b5-f71c-4f60-99c7-4e737386f1d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e46982e-44cc-431b-9f0b-c11910bf467a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77bff152-3580-4b21-b6de-dcd0c7e41164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1635d3fe-58b6-4ba9-a4e2-f4b964f6b5c8"",
                    ""path"": ""<XRController>/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ea4d645-4504-4529-b061-ab81934c3752"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05f6913d-c316-48b2-a6bb-e225f14c7960"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""886e731e-7071-4ae4-95c0-e61739dad6fd"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Touch"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee3d0cd2-254e-47a7-a8cb-bc94d9658c54"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8255d333-5683-4943-a58a-ccb207ff1dce"",
                    ""path"": ""<XRController>/{PrimaryAction}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4196877b-2f76-4e95-a673-9a5eb8c6aa57"",
                    ""path"": ""<Keyboard>/#(F)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9e84000-f0c2-4f4e-990c-9ae856f89a5a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b8b5f14-767c-4e64-a0aa-44b1991d6607"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd1fdc0d-034f-4ff4-b41b-d404925539db"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapToBow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4bf0c33-f39c-45a2-b81e-054b194fea9f"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79d67db8-9db0-4287-87a2-d8d197762641"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Settings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c96b595f-14b1-481a-a5ae-eae152d655ac"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Equipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72608807-a6a9-424d-92e1-e41697034d5f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0234e1b6-49d1-4942-b24b-6ac44d9dee5a"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapToDefault"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerBow"",
            ""id"": ""b22a9053-1e36-480e-8ea3-5f4211ddd9be"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""8d539428-35a9-4578-be19-f11d907bc933"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""f2fa800d-7eec-4edd-b860-f32e708206df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""2672a2b7-a9b4-45d3-a4a6-10e5a52cf7a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""7ef8e5a8-0dfe-4c3a-b0c4-92c768ee640c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill1"",
                    ""type"": ""Button"",
                    ""id"": ""4fb2df91-6412-4582-a62c-01a26ef0c5b3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill2"",
                    ""type"": ""Button"",
                    ""id"": ""9eb1566e-2402-43fb-88f0-9b83e36b6fa3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""613255b8-85ba-45de-8469-6cc979724c1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapToSword"",
                    ""type"": ""Button"",
                    ""id"": ""ccd2bf72-2ead-4f83-a49f-b3267c6b6c86"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapToDefault"",
                    ""type"": ""Button"",
                    ""id"": ""3a8e40f9-6951-413d-b4f1-332e0dd0f86d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Settings"",
                    ""type"": ""Button"",
                    ""id"": ""3fb4869a-c687-4cd0-b6d5-e9d23a820712"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""60383c10-cacd-4f3c-89f9-0a54e5ec8197"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Equipment"",
                    ""type"": ""Button"",
                    ""id"": ""c627fc47-752b-4b1f-bf19-c3f6e9fc719a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""717e9f9c-4535-40e3-8b57-9e9995210feb"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""87a618c0-ab41-42e2-b125-64da5397d314"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""562c1f3c-4f2b-4b41-a4c3-41462572b462"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""abbdbeab-9fb1-4f06-acee-7d6b07768778"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b58bb5e3-876f-47c4-954f-ccdc19d67382"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af7cce9d-1e6b-4bac-8053-1ef32792bf77"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e9c8c82d-4ced-4816-8bd0-d3839153a748"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ec81ff53-1469-4426-a814-49f9235fa4aa"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""21d2caf3-0cff-4098-82b5-988ab5bc692e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a5615c64-41a5-4ab3-abe3-a34c95c7b49b"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""97e14f49-6ab1-4d93-8c4d-63cc55119f93"",
                    ""path"": ""<XRController>/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c591c20-e9f2-451c-b2d9-5a5d9f9eb083"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""afb88599-baa2-41dc-9877-f9fc2344d0b3"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1636d1f7-6a95-4d7b-81db-af04e8181783"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6329b041-d435-4312-b35a-fdf6cfb838a4"",
                    ""path"": ""<Touchscreen>/primaryTouch/tap"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Touch"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b4275f6-c482-422a-8c6c-b43c7ffecbd6"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d452c8c4-bb47-4db6-be7f-27344f05d82d"",
                    ""path"": ""<XRController>/{PrimaryAction}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ae90cac7-2a01-4f1c-a810-68c220adea18"",
                    ""path"": ""<Keyboard>/#(F)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26d3c7a4-6a24-4863-9f4e-53cd8a39a14b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f42c3317-4419-49ba-ba89-1f3d737ecb4c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad3032cf-7b12-4fff-8393-2b3789022460"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapToSword"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""012ce2b9-c21a-4334-981f-c21d4c0d420e"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf5be37e-2d1f-46bb-bdf3-856a73ecb8ad"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Settings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80fb6516-b41a-435d-9cf9-a7225557df25"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98a8bdbd-3d7b-4948-be8e-5b3cede7adad"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Equipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1440775d-b67d-4eb0-86e4-654f6b13be6d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""977b2475-37a0-4605-99a4-5306d950ea13"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapToDefault"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Default"",
            ""id"": ""6ae84a51-13be-4658-85d4-efb02f5b97c3"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""dea756b9-cfc7-4624-a549-b8ce2c25938a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""32e423a6-c775-472b-9781-8d2cadf53454"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""172d1044-ef56-4af1-bd76-32ab718cce5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Settings"",
                    ""type"": ""Button"",
                    ""id"": ""59387fb8-ba7c-4f22-be5a-ca99fdda069c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""a8b48b1e-6f25-4b1c-8aa2-83d517718b24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Call Equipment"",
                    ""type"": ""Button"",
                    ""id"": ""90f8e8ac-8822-4e41-b79c-5d4e41306433"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapSword"",
                    ""type"": ""Button"",
                    ""id"": ""ccfae8c3-96c6-4785-8fb0-99be25cd9772"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapBow"",
                    ""type"": ""Button"",
                    ""id"": ""6c169ee4-3c92-4d14-a1fc-0b12caa706fd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""924db48f-cd8b-4686-be71-82f352e713a1"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Settings"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc3a0fd1-be19-4dea-86e5-52eed92046c1"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""74d7f502-d1c9-4859-a98a-5010908ed6e2"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""0ebb1156-9279-4b1f-8b8a-0542484fb0bb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""853c3e19-436c-4343-b437-c80d13e1fd9e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""908c9dfe-f722-4417-9d72-f83d0f6f92ca"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""caa33e70-88c8-463c-8eaf-870ba7ff2c8e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b59a9ce4-712f-4cab-b310-008914ea39a5"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dbcb6dfa-d263-46f0-9a83-9da71e469e03"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0068cd58-c9bc-4f85-8331-f785fb34a8a4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c0b22e12-f2a0-4a25-87f7-9e946a6a7f9f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""17a02b5b-5414-4fa8-8d6b-67602071fef1"",
                    ""path"": ""<XRController>/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13c7889a-6716-45ed-a3c0-003351073f96"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f689ddc-60fd-49eb-84b2-004fb1c5c48d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04eb968f-163d-49c0-932c-c9ed058c010b"",
                    ""path"": ""<Keyboard>/#(F)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd0acd6b-2fcf-4168-b150-f546c3cc03e3"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""27fab815-b841-432d-8e35-e316c6aa478a"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Call Equipment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95899524-c6d9-4231-88d9-4198f4bedcdf"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapSword"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e8dd9f0-2ed3-4f7f-9741-6b2ca5f75d74"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapBow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // PlayerSword
        m_PlayerSword = asset.FindActionMap("PlayerSword", throwIfNotFound: true);
        m_PlayerSword_Move = m_PlayerSword.FindAction("Move", throwIfNotFound: true);
        m_PlayerSword_Fire = m_PlayerSword.FindAction("Fire", throwIfNotFound: true);
        m_PlayerSword_Interaction = m_PlayerSword.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerSword_Skill1 = m_PlayerSword.FindAction("Skill1", throwIfNotFound: true);
        m_PlayerSword_Skill2 = m_PlayerSword.FindAction("Skill2", throwIfNotFound: true);
        m_PlayerSword_Dash = m_PlayerSword.FindAction("Dash", throwIfNotFound: true);
        m_PlayerSword_SwapToBow = m_PlayerSword.FindAction("SwapToBow", throwIfNotFound: true);
        m_PlayerSword_SwapToDefault = m_PlayerSword.FindAction("SwapToDefault", throwIfNotFound: true);
        m_PlayerSword_CallSettings = m_PlayerSword.FindAction("Call Settings", throwIfNotFound: true);
        m_PlayerSword_CallInventory = m_PlayerSword.FindAction("Call Inventory", throwIfNotFound: true);
        m_PlayerSword_CallEquipment = m_PlayerSword.FindAction("Call Equipment", throwIfNotFound: true);
        // PlayerBow
        m_PlayerBow = asset.FindActionMap("PlayerBow", throwIfNotFound: true);
        m_PlayerBow_Move = m_PlayerBow.FindAction("Move", throwIfNotFound: true);
        m_PlayerBow_Fire = m_PlayerBow.FindAction("Fire", throwIfNotFound: true);
        m_PlayerBow_Aim = m_PlayerBow.FindAction("Aim", throwIfNotFound: true);
        m_PlayerBow_Interaction = m_PlayerBow.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerBow_Skill1 = m_PlayerBow.FindAction("Skill1", throwIfNotFound: true);
        m_PlayerBow_Skill2 = m_PlayerBow.FindAction("Skill2", throwIfNotFound: true);
        m_PlayerBow_Dash = m_PlayerBow.FindAction("Dash", throwIfNotFound: true);
        m_PlayerBow_SwapToSword = m_PlayerBow.FindAction("SwapToSword", throwIfNotFound: true);
        m_PlayerBow_SwapToDefault = m_PlayerBow.FindAction("SwapToDefault", throwIfNotFound: true);
        m_PlayerBow_CallSettings = m_PlayerBow.FindAction("Call Settings", throwIfNotFound: true);
        m_PlayerBow_CallInventory = m_PlayerBow.FindAction("Call Inventory", throwIfNotFound: true);
        m_PlayerBow_CallEquipment = m_PlayerBow.FindAction("Call Equipment", throwIfNotFound: true);
        // Default
        m_Default = asset.FindActionMap("Default", throwIfNotFound: true);
        m_Default_Move = m_Default.FindAction("Move", throwIfNotFound: true);
        m_Default_Dash = m_Default.FindAction("Dash", throwIfNotFound: true);
        m_Default_Interaction = m_Default.FindAction("Interaction", throwIfNotFound: true);
        m_Default_CallSettings = m_Default.FindAction("Call Settings", throwIfNotFound: true);
        m_Default_CallInventory = m_Default.FindAction("Call Inventory", throwIfNotFound: true);
        m_Default_CallEquipment = m_Default.FindAction("Call Equipment", throwIfNotFound: true);
        m_Default_SwapSword = m_Default.FindAction("SwapSword", throwIfNotFound: true);
        m_Default_SwapBow = m_Default.FindAction("SwapBow", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerSword
    private readonly InputActionMap m_PlayerSword;
    private IPlayerSwordActions m_PlayerSwordActionsCallbackInterface;
    private readonly InputAction m_PlayerSword_Move;
    private readonly InputAction m_PlayerSword_Fire;
    private readonly InputAction m_PlayerSword_Interaction;
    private readonly InputAction m_PlayerSword_Skill1;
    private readonly InputAction m_PlayerSword_Skill2;
    private readonly InputAction m_PlayerSword_Dash;
    private readonly InputAction m_PlayerSword_SwapToBow;
    private readonly InputAction m_PlayerSword_SwapToDefault;
    private readonly InputAction m_PlayerSword_CallSettings;
    private readonly InputAction m_PlayerSword_CallInventory;
    private readonly InputAction m_PlayerSword_CallEquipment;
    public struct PlayerSwordActions
    {
        private @TestPlayerActions m_Wrapper;
        public PlayerSwordActions(@TestPlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerSword_Move;
        public InputAction @Fire => m_Wrapper.m_PlayerSword_Fire;
        public InputAction @Interaction => m_Wrapper.m_PlayerSword_Interaction;
        public InputAction @Skill1 => m_Wrapper.m_PlayerSword_Skill1;
        public InputAction @Skill2 => m_Wrapper.m_PlayerSword_Skill2;
        public InputAction @Dash => m_Wrapper.m_PlayerSword_Dash;
        public InputAction @SwapToBow => m_Wrapper.m_PlayerSword_SwapToBow;
        public InputAction @SwapToDefault => m_Wrapper.m_PlayerSword_SwapToDefault;
        public InputAction @CallSettings => m_Wrapper.m_PlayerSword_CallSettings;
        public InputAction @CallInventory => m_Wrapper.m_PlayerSword_CallInventory;
        public InputAction @CallEquipment => m_Wrapper.m_PlayerSword_CallEquipment;
        public InputActionMap Get() { return m_Wrapper.m_PlayerSword; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerSwordActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerSwordActions instance)
        {
            if (m_Wrapper.m_PlayerSwordActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnMove;
                @Fire.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnFire;
                @Interaction.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnInteraction;
                @Skill1.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill1;
                @Skill1.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill1;
                @Skill1.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill1;
                @Skill2.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill2;
                @Skill2.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill2;
                @Skill2.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSkill2;
                @Dash.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnDash;
                @SwapToBow.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToBow;
                @SwapToBow.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToBow;
                @SwapToBow.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToBow;
                @SwapToDefault.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToDefault;
                @SwapToDefault.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToDefault;
                @SwapToDefault.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnSwapToDefault;
                @CallSettings.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallSettings;
                @CallSettings.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallSettings;
                @CallSettings.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallSettings;
                @CallInventory.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallInventory;
                @CallInventory.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallInventory;
                @CallInventory.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallInventory;
                @CallEquipment.started -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.performed -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.canceled -= m_Wrapper.m_PlayerSwordActionsCallbackInterface.OnCallEquipment;
            }
            m_Wrapper.m_PlayerSwordActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Skill1.started += instance.OnSkill1;
                @Skill1.performed += instance.OnSkill1;
                @Skill1.canceled += instance.OnSkill1;
                @Skill2.started += instance.OnSkill2;
                @Skill2.performed += instance.OnSkill2;
                @Skill2.canceled += instance.OnSkill2;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @SwapToBow.started += instance.OnSwapToBow;
                @SwapToBow.performed += instance.OnSwapToBow;
                @SwapToBow.canceled += instance.OnSwapToBow;
                @SwapToDefault.started += instance.OnSwapToDefault;
                @SwapToDefault.performed += instance.OnSwapToDefault;
                @SwapToDefault.canceled += instance.OnSwapToDefault;
                @CallSettings.started += instance.OnCallSettings;
                @CallSettings.performed += instance.OnCallSettings;
                @CallSettings.canceled += instance.OnCallSettings;
                @CallInventory.started += instance.OnCallInventory;
                @CallInventory.performed += instance.OnCallInventory;
                @CallInventory.canceled += instance.OnCallInventory;
                @CallEquipment.started += instance.OnCallEquipment;
                @CallEquipment.performed += instance.OnCallEquipment;
                @CallEquipment.canceled += instance.OnCallEquipment;
            }
        }
    }
    public PlayerSwordActions @PlayerSword => new PlayerSwordActions(this);

    // PlayerBow
    private readonly InputActionMap m_PlayerBow;
    private IPlayerBowActions m_PlayerBowActionsCallbackInterface;
    private readonly InputAction m_PlayerBow_Move;
    private readonly InputAction m_PlayerBow_Fire;
    private readonly InputAction m_PlayerBow_Aim;
    private readonly InputAction m_PlayerBow_Interaction;
    private readonly InputAction m_PlayerBow_Skill1;
    private readonly InputAction m_PlayerBow_Skill2;
    private readonly InputAction m_PlayerBow_Dash;
    private readonly InputAction m_PlayerBow_SwapToSword;
    private readonly InputAction m_PlayerBow_SwapToDefault;
    private readonly InputAction m_PlayerBow_CallSettings;
    private readonly InputAction m_PlayerBow_CallInventory;
    private readonly InputAction m_PlayerBow_CallEquipment;
    public struct PlayerBowActions
    {
        private @TestPlayerActions m_Wrapper;
        public PlayerBowActions(@TestPlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerBow_Move;
        public InputAction @Fire => m_Wrapper.m_PlayerBow_Fire;
        public InputAction @Aim => m_Wrapper.m_PlayerBow_Aim;
        public InputAction @Interaction => m_Wrapper.m_PlayerBow_Interaction;
        public InputAction @Skill1 => m_Wrapper.m_PlayerBow_Skill1;
        public InputAction @Skill2 => m_Wrapper.m_PlayerBow_Skill2;
        public InputAction @Dash => m_Wrapper.m_PlayerBow_Dash;
        public InputAction @SwapToSword => m_Wrapper.m_PlayerBow_SwapToSword;
        public InputAction @SwapToDefault => m_Wrapper.m_PlayerBow_SwapToDefault;
        public InputAction @CallSettings => m_Wrapper.m_PlayerBow_CallSettings;
        public InputAction @CallInventory => m_Wrapper.m_PlayerBow_CallInventory;
        public InputAction @CallEquipment => m_Wrapper.m_PlayerBow_CallEquipment;
        public InputActionMap Get() { return m_Wrapper.m_PlayerBow; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerBowActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerBowActions instance)
        {
            if (m_Wrapper.m_PlayerBowActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnMove;
                @Fire.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnFire;
                @Aim.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnAim;
                @Interaction.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnInteraction;
                @Skill1.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill1;
                @Skill1.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill1;
                @Skill1.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill1;
                @Skill2.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill2;
                @Skill2.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill2;
                @Skill2.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSkill2;
                @Dash.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnDash;
                @SwapToSword.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToSword;
                @SwapToSword.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToSword;
                @SwapToSword.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToSword;
                @SwapToDefault.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToDefault;
                @SwapToDefault.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToDefault;
                @SwapToDefault.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnSwapToDefault;
                @CallSettings.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallSettings;
                @CallSettings.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallSettings;
                @CallSettings.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallSettings;
                @CallInventory.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallInventory;
                @CallInventory.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallInventory;
                @CallInventory.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallInventory;
                @CallEquipment.started -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.performed -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.canceled -= m_Wrapper.m_PlayerBowActionsCallbackInterface.OnCallEquipment;
            }
            m_Wrapper.m_PlayerBowActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Skill1.started += instance.OnSkill1;
                @Skill1.performed += instance.OnSkill1;
                @Skill1.canceled += instance.OnSkill1;
                @Skill2.started += instance.OnSkill2;
                @Skill2.performed += instance.OnSkill2;
                @Skill2.canceled += instance.OnSkill2;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @SwapToSword.started += instance.OnSwapToSword;
                @SwapToSword.performed += instance.OnSwapToSword;
                @SwapToSword.canceled += instance.OnSwapToSword;
                @SwapToDefault.started += instance.OnSwapToDefault;
                @SwapToDefault.performed += instance.OnSwapToDefault;
                @SwapToDefault.canceled += instance.OnSwapToDefault;
                @CallSettings.started += instance.OnCallSettings;
                @CallSettings.performed += instance.OnCallSettings;
                @CallSettings.canceled += instance.OnCallSettings;
                @CallInventory.started += instance.OnCallInventory;
                @CallInventory.performed += instance.OnCallInventory;
                @CallInventory.canceled += instance.OnCallInventory;
                @CallEquipment.started += instance.OnCallEquipment;
                @CallEquipment.performed += instance.OnCallEquipment;
                @CallEquipment.canceled += instance.OnCallEquipment;
            }
        }
    }
    public PlayerBowActions @PlayerBow => new PlayerBowActions(this);

    // Default
    private readonly InputActionMap m_Default;
    private IDefaultActions m_DefaultActionsCallbackInterface;
    private readonly InputAction m_Default_Move;
    private readonly InputAction m_Default_Dash;
    private readonly InputAction m_Default_Interaction;
    private readonly InputAction m_Default_CallSettings;
    private readonly InputAction m_Default_CallInventory;
    private readonly InputAction m_Default_CallEquipment;
    private readonly InputAction m_Default_SwapSword;
    private readonly InputAction m_Default_SwapBow;
    public struct DefaultActions
    {
        private @TestPlayerActions m_Wrapper;
        public DefaultActions(@TestPlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Default_Move;
        public InputAction @Dash => m_Wrapper.m_Default_Dash;
        public InputAction @Interaction => m_Wrapper.m_Default_Interaction;
        public InputAction @CallSettings => m_Wrapper.m_Default_CallSettings;
        public InputAction @CallInventory => m_Wrapper.m_Default_CallInventory;
        public InputAction @CallEquipment => m_Wrapper.m_Default_CallEquipment;
        public InputAction @SwapSword => m_Wrapper.m_Default_SwapSword;
        public InputAction @SwapBow => m_Wrapper.m_Default_SwapBow;
        public InputActionMap Get() { return m_Wrapper.m_Default; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultActions instance)
        {
            if (m_Wrapper.m_DefaultActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnMove;
                @Dash.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnDash;
                @Interaction.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnInteraction;
                @CallSettings.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallSettings;
                @CallSettings.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallSettings;
                @CallSettings.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallSettings;
                @CallInventory.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallInventory;
                @CallInventory.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallInventory;
                @CallInventory.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallInventory;
                @CallEquipment.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallEquipment;
                @CallEquipment.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnCallEquipment;
                @SwapSword.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapSword;
                @SwapSword.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapSword;
                @SwapSword.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapSword;
                @SwapBow.started -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapBow;
                @SwapBow.performed -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapBow;
                @SwapBow.canceled -= m_Wrapper.m_DefaultActionsCallbackInterface.OnSwapBow;
            }
            m_Wrapper.m_DefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @CallSettings.started += instance.OnCallSettings;
                @CallSettings.performed += instance.OnCallSettings;
                @CallSettings.canceled += instance.OnCallSettings;
                @CallInventory.started += instance.OnCallInventory;
                @CallInventory.performed += instance.OnCallInventory;
                @CallInventory.canceled += instance.OnCallInventory;
                @CallEquipment.started += instance.OnCallEquipment;
                @CallEquipment.performed += instance.OnCallEquipment;
                @CallEquipment.canceled += instance.OnCallEquipment;
                @SwapSword.started += instance.OnSwapSword;
                @SwapSword.performed += instance.OnSwapSword;
                @SwapSword.canceled += instance.OnSwapSword;
                @SwapBow.started += instance.OnSwapBow;
                @SwapBow.performed += instance.OnSwapBow;
                @SwapBow.canceled += instance.OnSwapBow;
            }
        }
    }
    public DefaultActions @Default => new DefaultActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerSwordActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSwapToBow(InputAction.CallbackContext context);
        void OnSwapToDefault(InputAction.CallbackContext context);
        void OnCallSettings(InputAction.CallbackContext context);
        void OnCallInventory(InputAction.CallbackContext context);
        void OnCallEquipment(InputAction.CallbackContext context);
    }
    public interface IPlayerBowActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnSwapToSword(InputAction.CallbackContext context);
        void OnSwapToDefault(InputAction.CallbackContext context);
        void OnCallSettings(InputAction.CallbackContext context);
        void OnCallInventory(InputAction.CallbackContext context);
        void OnCallEquipment(InputAction.CallbackContext context);
    }
    public interface IDefaultActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnCallSettings(InputAction.CallbackContext context);
        void OnCallInventory(InputAction.CallbackContext context);
        void OnCallEquipment(InputAction.CallbackContext context);
        void OnSwapSword(InputAction.CallbackContext context);
        void OnSwapBow(InputAction.CallbackContext context);
    }
}
